scalar upload @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Upload")

extend type Query {

    "Получение всех постов блога"
    all_blog_posts: [blog_post] @all

    "Получение поста по его id"
    blog_post(
        "Идентификатор поста"
        blog_post_id: ID @eq(key: "id") @rules(apply: ["required_without:slug"])
        "Адрес"
        slug: String @eq(key: "slug") @rules(apply: ["required_without:blog_post_id", "max:256"])
    ): blog_post @find
}

extend type Mutation @guard {

    "Создание поста"
    create_blog_post(
        "Адрес"
        slug: String! @rules(apply: ["min:2", "max:256", "unique:blog_posts,slug"])
        "Заголовок"
        title: String! @rules(apply: ["min:2", "max:256"])
        "Контент"
        content: String! @rules(apply: ["min:5", "max:5120"])
    ): blog_post

    "Обновление поста"
    update_blog_post(
        "Идентификатор поста"
        blog_post_id: ID!
        "Адрес"
        slug: String! @rules(apply: ["min:2", "max:256"])
        "Заголовок"
        title: String! @rules(apply: ["min:5", "max:256"])
        "Контент"
        content: String! @rules(apply: ["min:5", "max:5120"])
    ): blog_post @can(ability: "update", injectArgs: true)

    "Удаление поста"
    destroy_blog_post(
        "Идентификатор поста"
        blog_post_id: ID!
    ): blog_post @delete @can(ability: "delete", injectArgs: true)

    "Обновление картинки поста"
    update_blog_post_image(image: upload!, blog_post_id: ID!): blog_post

    "Создание комментария"
    create_blog_comment(
        "Идентификатор поста"
        blog_post_id: ID!
        "Комментарий"
        content: String! @rules(apply: ["min:5", "max:512"])
    ): blog_comment

    update_blog_comment(
        "Идентификатор комментария"
        id: ID!
        "Идентификатор поста"
        blog_post_id: ID!
        "Комментарий"
        content: String @rules(apply: ["min:5", "max:512"])
    ): blog_comment

    destroy_blog_comment(
        "Идентификатор комментария"
        id: ID!
        "Идентификатор поста"
        blog_post_id: ID!
    ): operation_status
}